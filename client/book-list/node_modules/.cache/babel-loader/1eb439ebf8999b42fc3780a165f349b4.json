{"ast":null,"code":"var _jsxFileName = \"/Users/joeydaems/Documents/Coding Challenge/client/book-list/src/components/BookForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form, FormField, Input } from \"semantic-ui-react\";\nimport Rating from \"@mui/material/Rating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookForm = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [publishDate, setPublishDate] = useState();\n  const [rating, setRating] = useState();\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Book Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Author\",\n        value: author,\n        onChange: e => setAuthor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Genre\",\n        value: genre,\n        onChange: e => setGenre(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Original Publish Date\",\n        value: publishDate,\n        onChange: e => setPublishDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Rating, {\n        name: \"simple-controlled\",\n        onChange: data => {\n          setRating(data);\n        },\n        value: rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: async () => {\n          const response = await fetch(\"/add_books\");\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookForm, \"qzCMFnPdCF2DOj3Mwe5tmcZmfL4=\");\n\n_c = BookForm;\nexport default BookForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookForm\");","map":{"version":3,"sources":["/Users/joeydaems/Documents/Coding Challenge/client/book-list/src/components/BookForm.jsx"],"names":["React","useState","Button","Form","FormField","Input","Rating","BookForm","name","setName","author","setAuthor","genre","setGenre","publishDate","setPublishDate","rating","setRating","e","target","value","data","response","fetch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,QAA+C,mBAA/C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,EAA9C;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,EAApC;AAEA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,IAAD,CAAM,KAAN;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,WAAW,EAAC,WADd;AAEE,QAAA,KAAK,EAAEO,IAFT;AAGE,QAAA,QAAQ,EAAGU,CAAD,IAAOT,OAAO,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,IAAD,CAAM,KAAN;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,WAAW,EAAC,QADd;AAEE,QAAA,KAAK,EAAEV,MAFT;AAGE,QAAA,QAAQ,EAAGQ,CAAD,IAAOP,SAAS,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAH5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF,eAeE,QAAC,IAAD,CAAM,KAAN;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,WAAW,EAAC,OADd;AAEE,QAAA,KAAK,EAAER,KAFT;AAGE,QAAA,QAAQ,EAAGM,CAAD,IAAOL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AAH3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF,eAsBE,QAAC,IAAD,CAAM,KAAN;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,WAAW,EAAC,uBADd;AAEE,QAAA,KAAK,EAAEN,WAFT;AAGE,QAAA,QAAQ,EAAGI,CAAD,IAAOH,cAAc,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAHjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtBF,eA6BE,QAAC,IAAD,CAAM,KAAN;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,mBADP;AAEE,QAAA,QAAQ,EAAGC,IAAD,IAAU;AAClBJ,UAAAA,SAAS,CAACI,IAAD,CAAT;AACD,SAJH;AAKE,QAAA,KAAK,EAAEL;AALT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA7BF,eAsCE,QAAC,SAAD;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,YAAY;AACnB,gBAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAD,CAA5B;AACD,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD,CAzDD;;GAAMhB,Q;;KAAAA,Q;AA2DN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form, FormField, Input } from \"semantic-ui-react\";\nimport Rating from \"@mui/material/Rating\";\n\nconst BookForm = () => {\n  const [name, setName] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [genre, setGenre] = useState(\"\");\n  const [publishDate, setPublishDate] = useState();\n  const [rating, setRating] = useState();\n\n  return (\n    <Form>\n      <Form.Field>\n        <Input\n          placeholder=\"Book Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Input\n          placeholder=\"Author\"\n          value={author}\n          onChange={(e) => setAuthor(e.target.value)}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Input\n          placeholder=\"Genre\"\n          value={genre}\n          onChange={(e) => setGenre(e.target.value)}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Input\n          placeholder=\"Original Publish Date\"\n          value={publishDate}\n          onChange={(e) => setPublishDate(e.target.value)}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Rating\n          name=\"simple-controlled\"\n          onChange={(data) => {\n            setRating(data);\n          }}\n          value={rating}\n        />\n      </Form.Field>\n      <FormField>\n        <Button\n          onClick={async () => {\n            const response = await fetch(\"/add_books\");\n          }}\n        >\n          Submit\n        </Button>\n      </FormField>\n    </Form>\n  );\n};\n\nexport default BookForm;\n"]},"metadata":{},"sourceType":"module"}